{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Documents/Mu\\u0308nchenPunktDe/google-map/src/Info.js\";\nimport { InfoWindowF } from \"@react-google-maps/api\";\nimport one from \"./1.webp\";\nimport two from \"./2.webp\";\nimport three from \"./3.webp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imgList = {\n  one: one,\n  two: two,\n  three: three\n};\nexport default function Info(props) {\n  const {\n    selectedPlace,\n    setSelectedPlace\n  } = props;\n  const checkSchedule = dateObject => {\n    const currentTime = new Date();\n    const currentDay = currentTime.toLocaleString(\"de-de\", {\n      weekday: \"long\"\n    });\n    const year = currentTime.getFullYear();\n    const month = (\"0\" + (currentTime.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + currentTime.getDate()).slice(-2);\n    const formattedDate = year + \"-\" + month + \"-\" + day;\n    const startTime = new Date(`${formattedDate}T${dateObject.start}`);\n    const endTime = new Date(`${formattedDate}T${dateObject.end}`);\n    return currentDay === dateObject.day && currentTime >= startTime && currentTime <= endTime;\n  };\n  return /*#__PURE__*/_jsxDEV(InfoWindowF, {\n    position: {\n      lat: selectedPlace.latitude,\n      lng: selectedPlace.longitude\n    },\n    zIndex: 1,\n    options: {\n      pixelOffset: {\n        width: 0,\n        height: -40,\n        equals: () => false\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      onClick: () => setSelectedPlace(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedPlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgList[selectedPlace.img],\n          alt: selectedPlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Adress : \", selectedPlace.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: selectedPlace.link,\n            children: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedPlace.timeList.map(t => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `${checkSchedule(t) ? \"active\" : \"\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: `${t.day.substr(0, 2)} ${t.start} - ${t.end}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["InfoWindowF","one","two","three","jsxDEV","_jsxDEV","Fragment","_Fragment","imgList","Info","props","selectedPlace","setSelectedPlace","checkSchedule","dateObject","currentTime","Date","currentDay","toLocaleString","weekday","year","getFullYear","month","getMonth","slice","day","getDate","formattedDate","startTime","start","endTime","end","position","lat","latitude","lng","longitude","zIndex","options","pixelOffset","width","height","equals","children","className","onClick","class","name","fileName","_jsxFileName","lineNumber","columnNumber","src","img","alt","address","href","link","timeList","map","t","substr","_c","$RefreshReg$"],"sources":["/Users/macbookair/Documents/MuÌˆnchenPunktDe/google-map/src/Info.js"],"sourcesContent":["import { InfoWindowF } from \"@react-google-maps/api\";\nimport one from \"./1.webp\";\nimport two from \"./2.webp\";\nimport three from \"./3.webp\";\n\nconst imgList = {\n  one: one,\n  two: two,\n  three: three,\n};\nexport default function Info(props) {\n  const { selectedPlace, setSelectedPlace } = props;\n\n  const checkSchedule = (dateObject) => {\n    const currentTime = new Date();\n    const currentDay = currentTime.toLocaleString(\"de-de\", { weekday: \"long\" });\n\n    const year = currentTime.getFullYear();\n    const month = (\"0\" + (currentTime.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + currentTime.getDate()).slice(-2);\n    const formattedDate = year + \"-\" + month + \"-\" + day;\n\n    const startTime = new Date(`${formattedDate}T${dateObject.start}`);\n    const endTime = new Date(`${formattedDate}T${dateObject.end}`);\n\n    return (\n      currentDay === dateObject.day &&\n      currentTime >= startTime &&\n      currentTime <= endTime\n    );\n  };\n\n  return (\n    <InfoWindowF\n      position={{\n        lat: selectedPlace.latitude,\n        lng: selectedPlace.longitude,\n      }}\n      zIndex={1}\n      options={{\n        pixelOffset: {\n          width: 0,\n          height: -40,\n          equals: () => false,\n        },\n      }}\n    >\n      <div className=\"info\" onClick={() => setSelectedPlace(null)}>\n        {\n          <div class=\"card\">\n            <h3>{selectedPlace.name}</h3>\n            <img src={imgList[selectedPlace.img]} alt={selectedPlace.name} />\n            <div class=\"card-body\">\n              <h3>Adress : {selectedPlace.address}</h3>\n              <a href={selectedPlace.link}>Website</a>\n\n              <ul>\n                {selectedPlace.timeList.map((t) => (\n                  <>\n                    <li className={`${checkSchedule(t) ? \"active\" : \"\"}`}>\n                      <h3>{`${t.day.substr(0, 2)} ${t.start} - ${t.end}`}</h3>\n                    </li>\n                  </>\n                ))}\n              </ul>\n            </div>\n          </div>\n        }\n      </div>\n    </InfoWindowF>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}